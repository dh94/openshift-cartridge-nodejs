#!/bin/bash

function update_nodejs {
  if [ -f "$OPENSHIFT_REPO_DIR/.openshift/NODE_VERSION_URL" ]; then
    local VERSION_URL=$(cat $OPENSHIFT_REPO_DIR/.openshift/NODE_VERSION_URL)
  else
    local VERSION_URL="https://semver.io/node/stable"
  fi

  local LATEST="v$(curl --silent --max-time 5 ${VERSION_URL})"
  local NODE_URL=https://nodejs.org/dist/${LATEST}/node-${LATEST}-linux-x64.tar.gz

  if [ "$LATEST" = "v" ]; then
    echo "Could not retrieve node version information from $VERSION_URL"
    return 1
  fi

  # Update Node.js if necessary
  if [ $(node --version) != ${LATEST} ]; then
    # Download
    if ! curl -L -o ${OPENSHIFT_DATA_DIR}tmp.tgz $NODE_URL; then
      return 1
    fi

    # Remove old files
    rm -rf ${OPENSHIFT_DATA_DIR}.nodejs

    # Copy binaries
    mkdir ${OPENSHIFT_DATA_DIR}.nodejs
    tar -xvzf ${OPENSHIFT_DATA_DIR}tmp.tgz --strip-components=1 -C ${OPENSHIFT_DATA_DIR}.nodejs

    # Remove downloaded archive
    rm ${OPENSHIFT_DATA_DIR}tmp.tgz

    # Output result
    echo "Node.js updated to $(node --version) with npm $(npm --version)."
  fi

  # Update global npm if necessary
  if [ $(npm view npm version) != $(npm --version) ]; then
    npm i -g npm
    echo "Npm updated to $(npm --version)."
  fi
}

function parse_args {
    while :
    do
        case $1 in
            -h | --help | -\?)
                echo "usage: $0 [--version[=]<value>]"
                exit 0
                ;;
            -v | --version)
                version=$2     # You might want to check if you really got VERSION
                shift 2
                ;;
            --version=*)
                version=${1#*=}        # Delete everything up till "="
                shift
                ;;
            --) # End of all options
                shift
                break
                ;;
            -*)
                echo "WARN: Unknown option... Exiting: $1" >&2
                exit 1
                ;;
            *)  # no more options. Stop while loop
                break
                ;;
        esac
    done
}
